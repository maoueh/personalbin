#!/usr/bin/env ruby
require 'set'

require 'personalbin/cli/base'

class TSync < Personalbin::Cli::Base
  def usage()
    "Usage: #{name()} <source> <destination>"
  end

  def description()
    <<-EOD
      Prints what is required to be synced to transfer
      all files & folders from source to destination.

      This command is not recursive ... currently.
    EOD
  end

  def execute()
    error("The argument <source> and <destination> must be specified") if @arguments.empty?()
    error("The argument <destination> must be specified") if @arguments.size() == 1
    error("No more than two arguments can be specified") if @arguments.size() > 2

    source = File.expand_path(@arguments[0])
    destination = File.expand_path(@arguments[1])

    error("The argument <source> must be a directory") if not File.directory?(source)
    error("The argument <destination> must be a directory") if not File.directory?(source)

    source_entries = find_entries(source)
    destination_entries = find_entries(destination)

    diff = source_entries.to_set() - destination_entries.to_set()
    diff.each do |element|
      puts element
    end

    puts "No difference between [#{@arguments[0]}] and [#{@arguments[1]}]" if diff.empty?()
  end

  def find_entries(directory)
    Dir.glob("#{directory}/*").map { |entry| File.basename(entry) }
  end
end

TSync.new(ARGV).run()
